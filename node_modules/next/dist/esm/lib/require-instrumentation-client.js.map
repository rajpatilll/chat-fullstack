{"version":3,"sources":["../../src/lib/require-instrumentation-client.ts"],"sourcesContent":["/**\n * This module imports the client instrumentation hook from the project root.\n *\n * The `private-next-instrumentation-client` module is automatically aliased to\n * the `instrumentation-client.ts` file in the project root by webpack or turbopack.\n */\nif (process.env.__NEXT_EXPERIMENTAL_CLIENT_INSTRUMENTATION_HOOK) {\n  if (process.env.NODE_ENV === 'development') {\n    const measureName = 'Client Instrumentation Hook'\n    const startTime = performance.now()\n    require('private-next-instrumentation-client')\n    const endTime = performance.now()\n\n    const duration = endTime - startTime\n    performance.measure(measureName, {\n      start: startTime,\n      end: endTime,\n      detail: 'Client instrumentation initialization',\n    })\n\n    // Using 16ms threshold as it represents one frame (1000ms/60fps)\n    // This helps identify if the instrumentation hook initialization\n    // could potentially cause frame drops during development.\n    const THRESHOLD = 16\n    if (duration > THRESHOLD) {\n      console.log(\n        `[${measureName}] Slow execution detected: ${duration.toFixed(0)}ms (Note: Code download overhead is not included in this measurement)`\n      )\n    }\n  } else {\n    require('private-next-instrumentation-client')\n  }\n}\n"],"names":["process","env","__NEXT_EXPERIMENTAL_CLIENT_INSTRUMENTATION_HOOK","NODE_ENV","measureName","startTime","performance","now","require","endTime","duration","measure","start","end","detail","THRESHOLD","console","log","toFixed"],"mappings":"AAAA;;;;;CAKC,GACD,IAAIA,QAAQC,GAAG,CAACC,+CAA+C,EAAE;IAC/D,IAAIF,QAAQC,GAAG,CAACE,QAAQ,KAAK,eAAe;QAC1C,MAAMC,cAAc;QACpB,MAAMC,YAAYC,YAAYC,GAAG;QACjCC,QAAQ;QACR,MAAMC,UAAUH,YAAYC,GAAG;QAE/B,MAAMG,WAAWD,UAAUJ;QAC3BC,YAAYK,OAAO,CAACP,aAAa;YAC/BQ,OAAOP;YACPQ,KAAKJ;YACLK,QAAQ;QACV;QAEA,iEAAiE;QACjE,iEAAiE;QACjE,0DAA0D;QAC1D,MAAMC,YAAY;QAClB,IAAIL,WAAWK,WAAW;YACxBC,QAAQC,GAAG,CACT,CAAC,CAAC,EAAEb,YAAY,2BAA2B,EAAEM,SAASQ,OAAO,CAAC,GAAG,qEAAqE,CAAC;QAE3I;IACF,OAAO;QACLV,QAAQ;IACV;AACF"}