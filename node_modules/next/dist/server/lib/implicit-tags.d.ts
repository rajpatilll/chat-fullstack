import type { FallbackRouteParams } from '../request/fallback-params';
export interface ImplicitTags {
    /**
     * For legacy usage, the implicit tags are passed to the incremental cache
     * handler in `get` calls.
     */
    readonly tags: string[];
    /**
     * Modern cache handlers don't receive implicit tags. Instead, the
     * implicit tags' expiration is stored in the work unit store, and used to
     * compare with a cache entry's timestamp.
     */
    expiration: number;
}
/**
 * Fetches a new expiration value for the given `implicitTags`, and mutates its
 * `expiration` property.
 */
export declare function updateImplicitTagsExpiration(implicitTags: ImplicitTags): Promise<void>;
export declare function getImplicitTags(page: string, url: {
    pathname: string;
    search?: string;
}, fallbackRouteParams: null | FallbackRouteParams): Promise<ImplicitTags>;
